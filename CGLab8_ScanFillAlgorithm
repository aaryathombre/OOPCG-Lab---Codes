/*
EXPERIMENT No.: 8
TITLE : 
Write C++ program to draw a concave polygon and fill it with desired color using
scan fill algorithm. Apply the concept of inheritance.
*/

#include<iostream>
#include<graphics.h>
#include<math.h>
using namespace std;

class scan{
	public:
		int x[20],y[20],k;
		float slope[20],x_int[20];
		void polygon(int n);
	
};

void scan :: polygon( int n) {
	int i,j,p;
	float dx,dy;
	int temp;
	x[n] = x[0];
	y[n] = y[0];
	for(i=0;i<n;i++){
		line(x[i],y[i],x[i+1],y[i+1]);
	}
	
	//calculate ymin and ymax
	int ymin = y[0];
	int ymax = y[0];
	for(i=0;i<n;i++){
		if(y[i]<ymin){
			ymin = y[i];
		}
		if(y[i]>ymax){
			ymax = y[i];
		}
	}
	
	//calculate slope
	for(i=0;i<n;i++){
		dx = x[i+1] - x[i];
		dy = y[i+1] - y[i];
		if(dy==0){
			slope[i] = 1;
		}
		else if(dx ==0 ){
			slope[i] = 0;
		}
		else{
			slope[i] = dx/dy;
		}
	}
	
	//for each scanline p calculate no. of intersections
	for(p=ymin;p<ymax;p++){
		k=0;
		for(i=0;i<n;i++){
			if(((y[i]<=p) && (y[i+1]>p)) || ((y[i]>p) && (y[i+1]<=p))){
				x_int[k] = x[i] + slope[i] * (p-y[i]);
				k++;
			}
		}
		//sort no. of intersection
		for(i=0;i<k-1;i++){
			for(j=0;j<k-1;j++){
				if(x_int[i] > x_int[i+1]){
					temp = x_int[i];
					x_int[i] = x_int[i+1];
					x_int[i+1] = temp;
				}
			}
		}
		
		//draw scanline between pair of intersections
		for(i=0;i<k;i=i+2){
			setcolor(YELLOW);
			line(x_int[i],p,x_int[i+1],p);
			delay(10);
		}
		
	}
}

int main(){
	int i,n;
	scan p;
	cout<<"Enter the no of sides of the polygon: ";
	cin>>n;
	cout<<"ENter coordinates: ";
	for(i=0;i<n;i++){
		cin>>p.x[i]>>p.y[i];
	}
	
	int gd,gm;
	gd = DETECT;
	initgraph(&gd,&gm,"NULL");
	p.polygon(n);
	getch();
	closegraph();
	return 0;
}
